function evenFibonacci(num){
  if (num === 1 || num === 0) return 1;
  let sum = 0;
  let left = 1;
  let right = 1;
  while ( left + right < num){
    let next = left + right;
    if(next % 2 === 0){
      sum += next;
    }
    left = right;
    right = next;
  }
  return sum;
}


console.log(evenFibonacci(4000000)); // 4613732

/* ====================================================================

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// i // num // number to count up until
// o // num // sum of even fibonacci numbers until N 
// c // ---
// e // num = 0 or num  = 1

The Strategy: 
Starting with the first two fibonacci numbers ( 1 , 1 )
Iterate through, calculating next fib number up until N
  If number is even, 
    TRUE: Add to sum
    FALSE: Continue
Return sum
*/
